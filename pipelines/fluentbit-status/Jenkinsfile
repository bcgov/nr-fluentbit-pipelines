@Library('polaris')
import ca.bc.gov.nrids.polaris.Podman
import ca.bc.gov.nrids.polaris.BrokerIntention
import ca.bc.gov.nrids.polaris.Vault
import ca.bc.gov.nrids.polaris.JenkinsUtil

def podman
def intention

pipeline {
    agent {
        label Podman.AGENT_LABEL_APP
    }
    environment {
        FB_AGENT_ROOT = "/apps_ux/agents"
        CONFIG_ROLE_ID = credentials('knox-jenkins-jenkins-apps-prod-role-id')
        NR_BROKER_JWT = credentials('nr-broker-jwt')
        IMAGE_TAG = "${params.imageTag}"
        AUTHFILE = "fluent-bit.auth.json"
    }
    stages {
        stage('Setup') {
            environment {
                HTTP_PROXY = "http://test-forwardproxy.nrs.bcgov:23128"
                FB_GIT_BRANCH = "${params.fbGitBranch}"
            }
            steps {
                script {
                    intention = new BrokerIntention(NR_BROKER_JWT,readJSON(file: 'scripts/intention-fb-configure.json'))
                    intention.setEventDetails(
                        userName: JenkinsUtil.getCauseUserId(currentBuild),
                        url: env.BUILD_URL,
                        reason: "View agent version"
                    )
                    intention.open(ttl: 600)
                    intention.startAction("login")
                    sh 'rm -rf fb && mkdir fb'
                    sh "git clone -b ${params.fbGitBranch} https://github.com/bcgov/nr-funbucks.git fb"
                }
            }
        }
        stage('Status') {
            steps {
                script {
                    def vaultToken = intention.provisionToken("login", CONFIG_ROLE_ID)
                    def vault = new Vault(vaultToken)
                    def registryCreds = vault.read('apps/data/prod/jenkins/jenkins-apps/artifactory')
                    env.REGISTRY_USERNAME = registryCreds['REGISTRY_USERNAME']
                    env.REGISTRY_PASSWORD = registryCreds['REGISTRY_PASSWORD']
                    env.VAULT_TOKEN = vaultToken
                    env.VAULT_ADDR = "${Vault.KNOX_URL}"
                    podman = new Podman(this, null, "artifacts.developer.gov.bc.ca/cc20-gen-docker-local")
                    podman.login(authfile: "${env.AUTHFILE}", options: "-u ${env.REGISTRY_USERNAME} -p ${env.REGISTRY_PASSWORD}")
                    intention.startAction("configure")
                    podman.run("fb-helper:${params.imageTag}",
                        authfile: "${env.AUTHFILE}",
                        options: "-v \$(pwd)/files/ssh-config:/app/ssh-config -v \$(pwd)/scripts:/app/scripts -v \$(pwd)/fb:/app/fb -v /sw_ux/bin:/sw_ux/bin -e 'FB_*' -e 'VAULT_*'",
                        command: "scripts/fluentbit_status.sh")
                    intention.endAction("configure")
                    vault.revokeToken()
                    podman.logout(authfile: "${env.AUTHFILE}")
                    intention.endAction("login")
                }
            }
        }
    }
    post {
        success {
            script {
                intention.close(true)
            }
        }
        unstable {
            script {
                if (intention) {
                    intention.close(false)
                }
            }
        }
        failure {
            script {
                if (intention) {
                    intention.close(false)
                }
            }
        }
    }
}
